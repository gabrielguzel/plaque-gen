<h1>Generer plaque</h1>
<button id="capture">generer</button>
<div>
<label for="name">Plaque généré</label>

<input type="text" id="plaque" name="name" required
       minlength="4" maxlength="8" size="10">
</div>
<div>
  <video id="preview" height="400" width="600" style="border: 1px solid black" autoplay playsinline></video>
  <canvas id="photo" height="400" width="600" style="display:none"></canvas>
</div>
<div class="display-cover">
    <video autoplay></video>
    <canvas class="d-none"></canvas>

    <div class="video-options">
        <select name="" id="" class="custom-select">
            <option value="">Select camera</option>
        </select>
    </div>

    <img class="screenshot-image d-none" alt="">

    <div class="controls">
        <button class="btn btn-danger play" title="Play"><i data-feather="play-circle"></i></button>
        <button class="btn btn-info pause d-none" title="Pause"><i data-feather="pause"></i></button>
        <button class="btn btn-outline-success screenshot d-none" title="ScreenShot"><i data-feather="image"></i></button>
    </div>
</div>
<script charset="utf-8">


const controls = document.querySelector('.controls');
const cameraOptions = document.querySelector('.video-options>select');
const video = document.querySelector('video');
const canvas = document.querySelector('canvas');
const screenshotImage = document.querySelector('img');
const buttons = [...controls.querySelectorAll('button')];
let streamStarted = false;

const [play, pause, screenshot] = buttons;

const constraints = {
  video: {
    width: {
      min: 1280,
      ideal: 1920,
      max: 2560,
    },
    height: {
      min: 720,
      ideal: 1080,
      max: 1440
    },
  }
};

const getCameraSelection = async () => {
  const devices = await navigator.mediaDevices.enumerateDevices();
  const videoDevices = devices.filter(device => device.kind === 'videoinput');
  const options = videoDevices.map(videoDevice => {
    return `<option value="${videoDevice.deviceId}">${videoDevice.label}</option>`;
  });
  cameraOptions.innerHTML = options.join('');
};

play.onclick = () => {
  if (streamStarted) {
    video.play();
    play.classList.add('d-none');
    pause.classList.remove('d-none');
    return;
  }
  if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {
    const updatedConstraints = {
      ...constraints,
      deviceId: {
        exact: cameraOptions.value
      }
    };
    startStream(updatedConstraints);
  }
};

const startStream = async (constraints) => {
  const stream = await navigator.mediaDevices.getUserMedia(constraints);
  handleStream(stream);
};

const handleStream = (stream) => {
  video.srcObject = stream;
  play.classList.add('d-none');
  pause.classList.remove('d-none');
  screenshot.classList.remove('d-none');
  streamStarted = true;
};

getCameraSelection();



  const captureBtn = document.querySelector('#capture');
  const previewVideo = document.querySelector('#preview');
  const photoCanvas = document.querySelector('#photo');
  const photoCtx = photoCanvas.getContext('2d');
  const plaque = document.querySelector('#plaque')

 

  document.addEventListener('DOMContentLoaded', async () => {
      const stream = await navigator.mediaDevices.getUserMedia({ video: true})
      previewVideo.srcObject = stream

      captureBtn.addEventListener('click', function(e) {
          e.preventDefault();
          const {clientWidth: w, clientHeight: h} = previewVideo;
          photoCtx.drawImage(previewVideo, 0, 0, w, h);
          var imgAsDataUrl = photoCanvas.toDataURL("image/png");

  let body = new FormData();
  
  body.append("upload",imgAsDataUrl);
  // Or body.append('upload', base64Image);
  body.append("regions", "be"); // Change to your country
  fetch("https://api.platerecognizer.com/v1/plate-reader/", {
    method: "POST",
    headers: {
      Authorization: "Token 1050752169cc9f6c08d000466f9a425262895f55",
    },
    body: body,
  })
    .then((res) => res.json())
    .then((json) => plaque.value=json.results[0].plate)
    .catch((err) => {
      console.log(err);
    });
      });

  });

</script>